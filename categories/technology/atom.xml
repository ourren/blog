<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Technology | Ourren]]></title>
  <link href="http://blog.ourren.com/categories/technology/atom.xml" rel="self"/>
  <link href="http://blog.ourren.com/"/>
  <updated>2015-03-27T12:06:07-07:00</updated>
  <id>http://blog.ourren.com/</id>
  <author>
    <name><![CDATA[ourren]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[利用MTR分析网络状况]]></title>
    <link href="http://blog.ourren.com/2015/03/27/diagnosing-network-issue-with-mtr/"/>
    <updated>2015-03-27T12:00:33-07:00</updated>
    <id>http://blog.ourren.com/2015/03/27/diagnosing-network-issue-with-mtr</id>
    <content type="html"><![CDATA[<p>平时测试网络状况一般都使用「ping, tracert, nslookup」这几个命令，但是<a href="https://github.com/traviscross/mtr">Mtr</a>(My traceroute)是一是一个非常棒的网络连通性判断工具，它结合了ping, traceroute,nslookup 的相关特性。当网络链路出现问题时很多人会用ping命令，可以简单的测试网络的连通性，看下丢包率，但是却无法确定是在哪里出现了问题；有些人就会用tracert命令来查看路由，或者用nslookup命令来查看DNS是否可用；如果你也觉得这三个命令太麻烦的话，那就用mtr吧，并且显示界面很美「没觉得么？」<!--more --></p>

<pre><code>                           My traceroute  [v0.71]
ts3-142.ts.cn.tlan (0.0.0.0)                           Fri Aug  3 22:39:50 2007
Keys:  Help   Display mode   Restart statistics   Order of fields   quit
                                              Packets               Pings
 Host                                       Loss%  Last   Avg  Best  Wrst StDev
 1. 172.16.76.1                              0.0%   0.5   0.4   0.4   0.5   0.1
 2. 202.108.132.17                           0.0% 179.0  20.2   2.3 179.0  55.8
 3. 172.19.140.69                            0.0%  13.7  10.3   6.2  17.1   3.8
 4. 172.17.0.17                              0.0%   9.3  16.5   8.6  62.3  16.3
 5. 172.16.0.57                              0.0%   9.9  11.2   6.1  21.0   5.4
 6. 192.168.0.25                             0.0%   7.3  11.4   5.1  17.2   4.2
 7. 210.74.176.241                          10.0% 110.1 109.6  92.7 123.3  11.3
 8. 202.96.13.101                           20.0% 104.9 111.8 101.4 126.5   9.3
 9. 202.106.192.233                         30.0% 120.7 113.8  85.5 138.8  17.2
10. 61.148.143.26                           10.0%  99.7 112.0  99.7 120.9   6.9
11. 202.96.8.246                            20.0%  97.0 108.2  92.3 137.4  14.3
12. 210.77.38.126                           11.1% 133.0 113.8  97.0 133.0  11.8
13. 
</code></pre>

<h4>安装步骤</h4>

<p>Mac下直接用brew进行安装「虽然经常吐槽brew各种不如linux下的包管理软件，但是有时候还是不错」：</p>

<pre><code>brew install mtr
sudo /usr/local/Cellar/mtr/0.86/sbin/mtr 8.8.8.8
ln -s /usr/local/Cellar/mtr/0.86/sbin/mtr /usr/bin
sudo mtr 8.8.4.4
</code></pre>

<p>Linux貌似就更简单：</p>

<pre><code>yum -y install mtr
apt-get install mtr-tiny
</code></pre>

<p>Windows只能用这<a href="http://sourceforge.net/projects/winmtr/">WinMTR</a>替代下。</p>

<h4>相关命令</h4>

<p>查看help:</p>

<pre><code>root@ts3-142 ~]# mtr --help
usage: mtr [-hvrctglspni46] [--help] [--version] [--report]
                [--report-cycles=COUNT] [--curses] [--gtk]
                [--raw] [--split] [--no-dns] [--address interface]
                [--psize=bytes/-s bytes]
                [--interval=SECONDS] HOSTNAME [PACKETSIZE]

各主要参数解释如下：
--report                       追踪结果以报告模式输出
--report-cycles=COUNT          定义追踪的次数，默认为16
--raw                          使结果以原始格式输出
--split                        将每次追踪的结果分别列出来，不象--report一样，统计整个结果
--no-dns                       只显示ip地址，不解析ip地址对应的主机名
--psize=bytes/-s bytes         定义数据包的大小，单位是字节
</code></pre>

<p>日常一般这样子用就可以得到前面的报告结果了。</p>

<pre><code>mtr --report -c 10 -n www.turbolinux.com.cn
//或者
 mtr --report www.google.com
 mtr --no-dns --report google.com
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Highcharts使用入门与技巧]]></title>
    <link href="http://blog.ourren.com/2015/03/23/highchart-note-with-php/"/>
    <updated>2015-03-23T00:00:00-07:00</updated>
    <id>http://blog.ourren.com/2015/03/23/highchart-note-with-php</id>
    <content type="html"><![CDATA[<p><a href="http://www.highcharts.com/">Highcharts</a>作为最牛逼的前端图形库当之不愧，不仅使用简单并且非盈利项目可以免费使用，复制粘贴几下就可以生成绚丽的图表，方便各位给Leader或者外行人员装逼专用。虽然说目前百度的<a href="http://echarts.baidu.com">Echarts</a>也非常火爆，荣获github上国内加星最多的项目，但是个人始终觉得还是Highcharts更胜一筹，不过在大数据特征展示上面我还是推荐Echarts。</p>

<p>个人接触Highcharts已经有好几年了，但是从来都没怎么深入研究过，不过话又说回来，Highcharts这种傻瓜式的前端库也没有高深的使用技巧，但是对于不熟悉的新手可以从如下的总结中进步提升。</p>

<!--more-->


<h3>初级配置</h3>

<p>初级配置就是把Highcharts给跑起来，复制几段代码就ok：</p>

<ul>
<li>HTML页面中包含<a href="http://www.highcharts.com/lib/jquery-1.7.2.js">jquery.js</a>, <a href="http://code.highcharts.com/highcharts.js">highcharts.js</a>, <a href="http://code.highcharts.com/modules/exporting.js">exporting.js</a>；</li>
<li>打开<a href="http://www.highcharts.com/demo/">highcharts demo</a>中的任意样式，然后选择「view options」就可以看到此demo的实现代码，复制到你的HTML页面中；</li>
<li>在HTML页面中新建一个div层，id为「container」；</li>
<li>刷新浏览器看效果。</li>
</ul>


<p>以上就是初级配置的详细过程；</p>

<h3>主题修改</h3>

<p>在demo页面中其实有很多的主题样式「dark, gray, sand等」，使用的时候也很简单:</p>

<ul>
<li>下载<a href="https://github.com/highslide-software/highcharts.com/tree/master/js/themes">主题文件</a>中对应颜色的js文件到你本地;</li>
<li>在你的HTML页面中包含对应的JS文件；</li>
<li>完工</li>
</ul>


<h3>线条修改</h3>

<p>颜色修改</p>

<p>在具体的项目中，当你需要修改线条的颜色时，你可以通过在demo 实例代码中添加如下代码：</p>

<pre><code>series: [{
        name: 'Tokyo',
        data: [7.0, 6.9, 9.5, 14.5, 18.2, 21.5, 25.2, 26.5, 23.3, 18.3, 13.9, 9.6],
        color: 'blue'
    }]
</code></pre>

<p>即在数据的下面添加了color属性，color的值可以取颜色对应的英文名字，例如「red, purple, green」等;</p>

<p>线条形状</p>

<p>可能你需要在一幅图形中显示相同颜色的两条曲线，这样你可以通过显示虚线或者实线来实现，显示代码如下：</p>

<pre><code>series: [{
        name: 'Tokyo',
        data: [7.0, 6.9, 9.5, 14.5, 18.2, 21.5, 25.2, 26.5, 23.3, 18.3, 13.9, 9.6],
        dashStyle: 'dash',
        color: 'blue'
    }]
</code></pre>

<p>添加dashStyle属性即可修改线条的形状</p>

<h3>PHP代码结合</h3>

<p>很多时候，highcharts需要的数据其实是由后端脚本生成的，比如PHP，这里可以通过PHP的json_encode实现快速赋值,当然输入是一个数组；</p>

<pre><code>series: [{
        name: 'original',
        data: &lt;?php echo json_encode(getData('PV'));?&gt;,
        dashStyle: 'dash',
        color: 'orange',
    }]
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[YouTube视频下载方法汇总]]></title>
    <link href="http://blog.ourren.com/2015/02/20/youtube_video_download_summary/"/>
    <updated>2015-02-20T00:00:00-08:00</updated>
    <id>http://blog.ourren.com/2015/02/20/youtube_video_download_summary</id>
    <content type="html"><![CDATA[<p>最近一直有人问我YouTube的视频怎么下载，其实在V2EX上也有很多用户讨论这个问题。本文就将这些方法汇总，方便大家查询和参考。</p>

<p>在介绍下载方法之前，首先大家需要明白的是本文针对的是YouTube上的视频，也就是说原始地址都必须是YouTube的视频链接。如果你需要下载的视频在其它网站上，那么你需要判断是否为YouTube视频并且需要找到YouTube的原始链接，其实链接也非常好找，点击播放器右下角的「YouTube」就可以打开YouTube的原始链接，有了这个原始链接就可以采用如下两种方法下载：</p>

<h4>使用下载网站</h4>

<p>「推荐」这种方法简单快捷，懒人必备，整个过程只需要点击几次：</p>

<ul>
<li>打开<a href="http://www.clipconverter.cc/">http://www.clipconverter.cc/</a>;</li>
<li>复制需要下载的原始链接到上面网页的输入框选择「continue」;</li>
<li>选择分辨率，一般果断选1080p;</li>
<li>点击「start」;</li>
<li>「download」</li>
</ul>


<!--more-->


<p>跟clipconverter类似的网站很多，列举如下：</p>

<ul>
<li><a href="http://en.savefrom.net/">http://en.savefrom.net/</a>;</li>
<li><a href="https://d.jaylab.org/">https://d.jaylab.org/</a>;</li>
<li><a href="http://kej.tw/flvretriever/">http://kej.tw/flvretriever/</a>;</li>
<li><a href="http://keepvid.com/">http://keepvid.com/</a>;</li>
</ul>


<h4>使用下载工具</h4>

<p>Windows/Linux/Mac上都有对应的下载工具，同时Firefox也有类似的插件可以下载视频；</p>

<ul>
<li><a href="https://www.4kdownload.com/">4kdownload</a>支持多平台;</li>
<li><a href="http://rg3.github.io/youtube-dl/">youtube-dl   </a>，支持多平台；</li>
<li>Firefox + video downloadhelper;</li>
</ul>


<h4>国内视频下载</h4>

<p>最后补充下国内视频「youku、tudou、ku6」等网站可以采用硕鼠进行下载：</p>

<ul>
<li><a href="http://www.flvcd.com/">硕鼠</a>，同样的使用方法，复制链接即可下载;</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[美化Ubuntu下Pycharm字体]]></title>
    <link href="http://blog.ourren.com/2015/01/31/ubuntu_beauty_fonts_with_pycharm/"/>
    <updated>2015-01-31T00:00:00-08:00</updated>
    <id>http://blog.ourren.com/2015/01/31/ubuntu_beauty_fonts_with_pycharm</id>
    <content type="html"><![CDATA[<h3>美化Ubuntu下pycharm的字体</h3>

<p>Pycharm作为一款优秀的Python IDE，现在更有免费的社区版可供下载，不得不说对于pyer方便不少，随便Sublime Text确实可以在一定程度上解决问题，但是Pycharm的调试和集成工具绝对是提交效率的好帮手。然而Pycharm安装在Ubuntu下时界面和字体的显示效果极差，跟Mac的效果简直没办法比，因此Google了一番找到了完美的解决方案，特此分享。</p>

<h3>解决方案</h3>

<p>Pycharm 字体渲染技术差的原因貌似主要是openjdk的问题，因此Linux下通过infinality fontconfig和openjdk patch来解决相关问题，在国外博客和V2ex上其实已经有详细说明：</p>

<!--more-->


<ol>
<li><a href="http://www.webupd8.org/2013/06/install-openjdk-patched-with-font-fixes.html">INSTALL OPENJDK PATCHED WITH FONT FIXES</a>；</li>
<li><a href="http://www.webupd8.org/2013/06/better-font-rendering-in-linux-with.html">BETTER FONT RENDERING IN LINUX WITH INFINALITY</a></li>
<li><a href="http://www.v2ex.com/t/88662">Linux中PyCharm渲染字体</a></li>
</ol>


<h3>安装步骤</h3>

<p>需要安装两个软件包进行设置，具体操作如下</p>

<ol>
<li><p>安装Infinality</p>

<pre><code> sudo add-apt-repository ppa:no1wantdthisname/ppa
 sudo apt-get update
 sudo apt-get upgrade
 sudo apt-get install fontconfig-infinality
</code></pre></li>
<li><p>安装openjdk-fontfix</p>

<pre><code> sudo add-apt-repository ppa:no1wantdthisname/openjdk-fontfix
 sudo apt-get update
 sudo apt-get upgrade
</code></pre></li>
<li>安装完成</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[解决composer的ssl证书问题]]></title>
    <link href="http://blog.ourren.com/2015/01/18/solve_composer_ssl_error/"/>
    <updated>2015-01-18T00:00:00-08:00</updated>
    <id>http://blog.ourren.com/2015/01/18/solve_composer_ssl_error</id>
    <content type="html"><![CDATA[<p>作为PHP深度开发者，<a href="https://getcomposer.org/">composer</a>的出现可以说解决了大家的环境配置成本、代码共享方式和代码更新问题，现在的大部分的PHP框架如<a href="http://laravel.com/">laravel</a>、<a href="http://www.yiiframework.com/">yii2</a> 都采用composer的包管理机制，可以让开发者快速安装插件。</p>

<p>最近遇到的主要问题是执行composer更新命令遇到如下错误：</p>

<pre><code>composer self-update

[Composer\Downloader\TransportException]
The "https://getcomposer.org/version" file could not be downloaded: SSL operation failed with code 1. OpenSSL Error messages:error:14090086:SSL routines:SSL3_GET_SERVER_CERTIFICATE:certificate verify failed
Failed to enable crypto
failed to open stream: operation failed
</code></pre>

<!--more-->


<p>其实你要是把这个错误信息放在网上<a href="https://www.google.com/search?q=mac+The+%22https%3A%2F%2Fpackagist.org%2Fpackages.json%22+file+could+not+be+downloaded%3A+SSL+operation+failed+with+code+1.+OpenSSL+Error+messages%3A&amp;oq=mac+The+%22https%3A%2F%2Fpackagist.org%2Fpackages.json%22+file+could+not+be+downloaded%3A+SSL+operation+failed+with+code+1.+OpenSSL+Error+messages%3A">一搜</a>，结果发现一堆这种问题，但是问题的关键是这些问题都没有给出解决方案，比较靠谱的回答有如下几种：</p>

<ol>
<li>证书出现问题，去更新下你的证书信息；</li>
<li>网络问题，自己看下是不是被欺骗了；</li>
<li>&hellip;&hellip;.</li>
</ol>


<p>Google出来很多答案，就连stackoverflow都有很多问题和答案，但是问题的关键这些答案都不能解决问题，通过自己的研究发现目前Mac安装的PHP版本是5.3版本的，感觉应该是openssl爆出漏洞后导致证书不可信，所以直接升级PHP版本应该就可以，那就可以直接执行如下命令：</p>

<pre><code>brew install php56
</code></pre>

<p>请注意，make的时候cpu飙到99%是正常的，稍微等几分钟就好了，然后执行更新：</p>

<pre><code>composer update

Your requirements could not be resolved to an installable set of packages.
</code></pre>

<p>这个问题就更好解决了，修改当前工程的composer.json中的：</p>

<pre><code>"minimum-stability": "stable",
</code></pre>

<p>改为：</p>

<pre><code>"minimum-stability": "dev",
"prefer-stable": true,
</code></pre>

<p>顺利解决问题～</p>
]]></content>
  </entry>
  
</feed>
